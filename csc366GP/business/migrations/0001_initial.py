# Generated by Django 3.0.6 on 2020-06-06 19:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('email', models.CharField(blank=True, max_length=100)),
                ('joinDate', models.DateField()),
                ('points', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('emplId', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordinal', models.IntegerField()),
                ('qty', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='StockItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SupplierInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SupplierInvoiceLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField()),
                ('costPerItem', models.FloatField()),
                ('stockItem', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.StockItem')),
                ('supplierInvoice', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.SupplierInvoice')),
            ],
        ),
        migrations.AddField(
            model_name='supplierinvoice',
            name='items',
            field=models.ManyToManyField(through='business.SupplierInvoiceLine', to='business.StockItem'),
        ),
        migrations.AddField(
            model_name='supplierinvoice',
            name='location',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.Location'),
        ),
        migrations.AddField(
            model_name='supplierinvoice',
            name='supplierId',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.Supplier'),
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('returnDate', models.DateField()),
                ('qty', models.IntegerField()),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.Employee')),
                ('receiptItem', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.LineItem')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax', models.FloatField()),
                ('tip', models.FloatField()),
                ('total', models.FloatField()),
                ('date', models.DateField()),
                ('payment', models.CharField(choices=[('Crd', 'Card'), ('Csh', 'Cash')], max_length=25)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.Customer')),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.Employee')),
                ('location', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.Location')),
            ],
        ),
        migrations.CreateModel(
            name='PayCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField()),
                ('endDate', models.DateField()),
                ('total', models.FloatField(blank=True)),
                ('emplId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('items', models.ManyToManyField(through='business.Ingredients', to='business.StockItem')),
            ],
        ),
        migrations.CreateModel(
            name='LocationExpenses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(1), django.core.validators.MinValueValidator(12)])),
                ('year', models.PositiveIntegerField()),
                ('amount', models.FloatField()),
                ('expenseName', models.CharField(max_length=200)),
                ('location', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.Location')),
            ],
        ),
        migrations.AddField(
            model_name='lineitem',
            name='menuItem',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.MenuItem'),
        ),
        migrations.AddField(
            model_name='lineitem',
            name='receipt',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.Receipt'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField()),
                ('location', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.Location')),
                ('stockItem', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.StockItem')),
            ],
        ),
        migrations.AddField(
            model_name='ingredients',
            name='menuItem',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.MenuItem'),
        ),
        migrations.AddField(
            model_name='ingredients',
            name='stockItem',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.StockItem'),
        ),
        migrations.CreateModel(
            name='EmploymentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startDate', models.DateField()),
                ('endDate', models.DateField(blank=True)),
                ('position', models.CharField(choices=[('M', 'Manager'), ('E', 'Base Employee')], default='Base Employee', max_length=25)),
                ('role', models.CharField(default='unassigned', max_length=100)),
                ('emplId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.Employee')),
                ('location', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.Location')),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='business.EmploymentRecord')),
            ],
        ),
        migrations.CreateModel(
            name='DailyTimeCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('hours', models.FloatField()),
                ('rate', models.FloatField()),
                ('emplId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='business.Employee')),
                ('payCheck', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='business.PayCheck')),
            ],
        ),
    ]
